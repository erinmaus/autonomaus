void ActiveTexture(const call::ActiveTexture* call);
void AttachShader(const call::AttachShader* call);
void BindAttribLocation(const call::BindAttribLocation* call);
void BindBuffer(const call::BindBuffer* call);
void BindBufferBase(const call::BindBufferBase* call);
void BindBufferRange(const call::BindBufferRange* call);
void BindFragDataLocation(const call::BindFragDataLocation* call);
void BindFragDataLocationIndexed(const call::BindFragDataLocationIndexed* call);
void BindFramebuffer(const call::BindFramebuffer* call);
void BindFramebufferEXT(const call::BindFramebufferEXT* call);
void BindRenderbuffer(const call::BindRenderbuffer* call);
void BindRenderbufferEXT(const call::BindRenderbufferEXT* call);
void BindTexture(const call::BindTexture* call);
void BindVertexArray(const call::BindVertexArray* call);
void BlendColor(const call::BlendColor* call);
void BlendEquation(const call::BlendEquation* call);
void BlendEquationSeparate(const call::BlendEquationSeparate* call);
void BlendFunc(const call::BlendFunc* call);
void BlendFuncSeparate(const call::BlendFuncSeparate* call);
void BlitFramebuffer(const call::BlitFramebuffer* call);
void BufferData(const call::BufferData* call);
void BufferSubData(const call::BufferSubData* call);
void ClampColor(const call::ClampColor* call);
void Clear(const call::Clear* call);
void ClearBufferfi(const call::ClearBufferfi* call);
void ClearBufferfv(const call::ClearBufferfv* call);
void ClearBufferiv(const call::ClearBufferiv* call);
void ClearBufferuiv(const call::ClearBufferuiv* call);
void ClearColor(const call::ClearColor* call);
void ClearDepth(const call::ClearDepth* call);
void ClearStencil(const call::ClearStencil* call);
void ColorMask(const call::ColorMask* call);
void ColorMaski(const call::ColorMaski* call);
void CompileShader(const call::CompileShader* call);
void CompressedTexImage1D(const call::CompressedTexImage1D* call);
void CompressedTexImage2D(const call::CompressedTexImage2D* call);
void CompressedTexImage3D(const call::CompressedTexImage3D* call);
void CompressedTexSubImage1D(const call::CompressedTexSubImage1D* call);
void CompressedTexSubImage2D(const call::CompressedTexSubImage2D* call);
void CompressedTexSubImage3D(const call::CompressedTexSubImage3D* call);
void CopyBufferSubData(const call::CopyBufferSubData* call);
void CopyImageSubData(const call::CopyImageSubData* call);
void CopyTexImage1D(const call::CopyTexImage1D* call);
void CopyTexImage2D(const call::CopyTexImage2D* call);
void CopyTexSubImage1D(const call::CopyTexSubImage1D* call);
void CopyTexSubImage2D(const call::CopyTexSubImage2D* call);
void CopyTexSubImage3D(const call::CopyTexSubImage3D* call);
void CreateProgram(const call::CreateProgram* call);
void CreateShader(const call::CreateShader* call);
void CullFace(const call::CullFace* call);
void DeleteBuffers(const call::DeleteBuffers* call);
void DeleteFramebuffers(const call::DeleteFramebuffers* call);
void DeleteFramebuffersEXT(const call::DeleteFramebuffersEXT* call);
void DeleteProgram(const call::DeleteProgram* call);
void DeleteRenderbuffers(const call::DeleteRenderbuffers* call);
void DeleteRenderbuffersEXT(const call::DeleteRenderbuffersEXT* call);
void DeleteShader(const call::DeleteShader* call);
void DeleteTextures(const call::DeleteTextures* call);
void DeleteVertexArrays(const call::DeleteVertexArrays* call);
void DepthFunc(const call::DepthFunc* call);
void DepthMask(const call::DepthMask* call);
void DepthRange(const call::DepthRange* call);
void DetachShader(const call::DetachShader* call);
void Disable(const call::Disable* call);
void DisableVertexAttribArray(const call::DisableVertexAttribArray* call);
void Disablei(const call::Disablei* call);
void DrawArrays(const call::DrawArrays* call);
void DrawArraysInstanced(const call::DrawArraysInstanced* call);
void DrawBuffer(const call::DrawBuffer* call);
void DrawBuffers(const call::DrawBuffers* call);
void DrawElements(const call::DrawElements* call);
void DrawElementsBaseVertex(const call::DrawElementsBaseVertex* call);
void DrawElementsInstanced(const call::DrawElementsInstanced* call);
void DrawElementsInstancedBaseVertex(const call::DrawElementsInstancedBaseVertex* call);
void DrawRangeElements(const call::DrawRangeElements* call);
void DrawRangeElementsBaseVertex(const call::DrawRangeElementsBaseVertex* call);
void Enable(const call::Enable* call);
void EnableVertexAttribArray(const call::EnableVertexAttribArray* call);
void Enablei(const call::Enablei* call);
void FlushMappedBufferRange(const call::FlushMappedBufferRange* call);
void FramebufferRenderbuffer(const call::FramebufferRenderbuffer* call);
void FramebufferRenderbufferEXT(const call::FramebufferRenderbufferEXT* call);
void FramebufferTexture(const call::FramebufferTexture* call);
void FramebufferTexture1D(const call::FramebufferTexture1D* call);
void FramebufferTexture1DEXT(const call::FramebufferTexture1DEXT* call);
void FramebufferTexture2D(const call::FramebufferTexture2D* call);
void FramebufferTexture2DEXT(const call::FramebufferTexture2DEXT* call);
void FramebufferTexture3D(const call::FramebufferTexture3D* call);
void FramebufferTexture3DEXT(const call::FramebufferTexture3DEXT* call);
void FramebufferTextureLayer(const call::FramebufferTextureLayer* call);
void FrontFace(const call::FrontFace* call);
void GenBuffers(const call::GenBuffers* call);
void GenFramebuffers(const call::GenFramebuffers* call);
void GenFramebuffersEXT(const call::GenFramebuffersEXT* call);
void GenRenderbuffers(const call::GenRenderbuffers* call);
void GenRenderbuffersEXT(const call::GenRenderbuffersEXT* call);
void GenTextures(const call::GenTextures* call);
void GenVertexArrays(const call::GenVertexArrays* call);
void GetAttribLocation(const call::GetAttribLocation* call);
void GetFragDataLocation(const call::GetFragDataLocation* call);
void GetUniformBlockIndex(const call::GetUniformBlockIndex* call);
void GetUniformLocation(const call::GetUniformLocation* call);
void LineWidth(const call::LineWidth* call);
void LinkProgram(const call::LinkProgram* call);
void LogicOp(const call::LogicOp* call);
void MapBuffer(const call::MapBuffer* call);
void MapBufferRange(const call::MapBufferRange* call);
void MultiDrawArrays(const call::MultiDrawArrays* call);
void MultiDrawElements(const call::MultiDrawElements* call);
void MultiDrawElementsBaseVertex(const call::MultiDrawElementsBaseVertex* call);
void PixelStoref(const call::PixelStoref* call);
void PixelStorei(const call::PixelStorei* call);
void PointParameterf(const call::PointParameterf* call);
void PointParameterfv(const call::PointParameterfv* call);
void PointParameteri(const call::PointParameteri* call);
void PointParameteriv(const call::PointParameteriv* call);
void PointSize(const call::PointSize* call);
void PolygonMode(const call::PolygonMode* call);
void PolygonOffset(const call::PolygonOffset* call);
void PrimitiveRestartIndex(const call::PrimitiveRestartIndex* call);
void ProvokingVertex(const call::ProvokingVertex* call);
void ReadBuffer(const call::ReadBuffer* call);
void RenderbufferStorage(const call::RenderbufferStorage* call);
void RenderbufferStorageEXT(const call::RenderbufferStorageEXT* call);
void RenderbufferStorageMultisample(const call::RenderbufferStorageMultisample* call);
void SampleCoverage(const call::SampleCoverage* call);
void SampleMaski(const call::SampleMaski* call);
void Scissor(const call::Scissor* call);
void ShaderSource(const call::ShaderSource* call);
void StencilFunc(const call::StencilFunc* call);
void StencilFuncSeparate(const call::StencilFuncSeparate* call);
void StencilMask(const call::StencilMask* call);
void StencilMaskSeparate(const call::StencilMaskSeparate* call);
void StencilOp(const call::StencilOp* call);
void StencilOpSeparate(const call::StencilOpSeparate* call);
void TexImage1D(const call::TexImage1D* call);
void TexImage2D(const call::TexImage2D* call);
void TexImage2DMultisample(const call::TexImage2DMultisample* call);
void TexImage3D(const call::TexImage3D* call);
void TexImage3DMultisample(const call::TexImage3DMultisample* call);
void TexParameterIiv(const call::TexParameterIiv* call);
void TexParameterIuiv(const call::TexParameterIuiv* call);
void TexParameterf(const call::TexParameterf* call);
void TexParameterfv(const call::TexParameterfv* call);
void TexParameteri(const call::TexParameteri* call);
void TexParameteriv(const call::TexParameteriv* call);
void TexSubImage1D(const call::TexSubImage1D* call);
void TexSubImage2D(const call::TexSubImage2D* call);
void TexSubImage3D(const call::TexSubImage3D* call);
void Uniform1f(const call::Uniform1f* call);
void Uniform1fv(const call::Uniform1fv* call);
void Uniform1i(const call::Uniform1i* call);
void Uniform1iv(const call::Uniform1iv* call);
void Uniform1ui(const call::Uniform1ui* call);
void Uniform1uiv(const call::Uniform1uiv* call);
void Uniform2f(const call::Uniform2f* call);
void Uniform2fv(const call::Uniform2fv* call);
void Uniform2i(const call::Uniform2i* call);
void Uniform2iv(const call::Uniform2iv* call);
void Uniform2ui(const call::Uniform2ui* call);
void Uniform2uiv(const call::Uniform2uiv* call);
void Uniform3f(const call::Uniform3f* call);
void Uniform3fv(const call::Uniform3fv* call);
void Uniform3i(const call::Uniform3i* call);
void Uniform3iv(const call::Uniform3iv* call);
void Uniform3ui(const call::Uniform3ui* call);
void Uniform3uiv(const call::Uniform3uiv* call);
void Uniform4f(const call::Uniform4f* call);
void Uniform4fv(const call::Uniform4fv* call);
void Uniform4i(const call::Uniform4i* call);
void Uniform4iv(const call::Uniform4iv* call);
void Uniform4ui(const call::Uniform4ui* call);
void Uniform4uiv(const call::Uniform4uiv* call);
void UniformBlockBinding(const call::UniformBlockBinding* call);
void UniformMatrix2fv(const call::UniformMatrix2fv* call);
void UniformMatrix2x3fv(const call::UniformMatrix2x3fv* call);
void UniformMatrix2x4fv(const call::UniformMatrix2x4fv* call);
void UniformMatrix3fv(const call::UniformMatrix3fv* call);
void UniformMatrix3x2fv(const call::UniformMatrix3x2fv* call);
void UniformMatrix3x4fv(const call::UniformMatrix3x4fv* call);
void UniformMatrix4fv(const call::UniformMatrix4fv* call);
void UniformMatrix4x2fv(const call::UniformMatrix4x2fv* call);
void UniformMatrix4x3fv(const call::UniformMatrix4x3fv* call);
void UnmapBuffer(const call::UnmapBuffer* call);
void UseProgram(const call::UseProgram* call);
void VertexAttrib1d(const call::VertexAttrib1d* call);
void VertexAttrib1dv(const call::VertexAttrib1dv* call);
void VertexAttrib1f(const call::VertexAttrib1f* call);
void VertexAttrib1fv(const call::VertexAttrib1fv* call);
void VertexAttrib1s(const call::VertexAttrib1s* call);
void VertexAttrib1sv(const call::VertexAttrib1sv* call);
void VertexAttrib2d(const call::VertexAttrib2d* call);
void VertexAttrib2dv(const call::VertexAttrib2dv* call);
void VertexAttrib2f(const call::VertexAttrib2f* call);
void VertexAttrib2fv(const call::VertexAttrib2fv* call);
void VertexAttrib2s(const call::VertexAttrib2s* call);
void VertexAttrib2sv(const call::VertexAttrib2sv* call);
void VertexAttrib3d(const call::VertexAttrib3d* call);
void VertexAttrib3dv(const call::VertexAttrib3dv* call);
void VertexAttrib3f(const call::VertexAttrib3f* call);
void VertexAttrib3fv(const call::VertexAttrib3fv* call);
void VertexAttrib3s(const call::VertexAttrib3s* call);
void VertexAttrib3sv(const call::VertexAttrib3sv* call);
void VertexAttrib4Nbv(const call::VertexAttrib4Nbv* call);
void VertexAttrib4Niv(const call::VertexAttrib4Niv* call);
void VertexAttrib4Nsv(const call::VertexAttrib4Nsv* call);
void VertexAttrib4Nub(const call::VertexAttrib4Nub* call);
void VertexAttrib4Nubv(const call::VertexAttrib4Nubv* call);
void VertexAttrib4Nuiv(const call::VertexAttrib4Nuiv* call);
void VertexAttrib4Nusv(const call::VertexAttrib4Nusv* call);
void VertexAttrib4bv(const call::VertexAttrib4bv* call);
void VertexAttrib4d(const call::VertexAttrib4d* call);
void VertexAttrib4dv(const call::VertexAttrib4dv* call);
void VertexAttrib4f(const call::VertexAttrib4f* call);
void VertexAttrib4fv(const call::VertexAttrib4fv* call);
void VertexAttrib4iv(const call::VertexAttrib4iv* call);
void VertexAttrib4s(const call::VertexAttrib4s* call);
void VertexAttrib4sv(const call::VertexAttrib4sv* call);
void VertexAttrib4ubv(const call::VertexAttrib4ubv* call);
void VertexAttrib4uiv(const call::VertexAttrib4uiv* call);
void VertexAttrib4usv(const call::VertexAttrib4usv* call);
void VertexAttribDivisor(const call::VertexAttribDivisor* call);
void VertexAttribI1i(const call::VertexAttribI1i* call);
void VertexAttribI1iv(const call::VertexAttribI1iv* call);
void VertexAttribI1ui(const call::VertexAttribI1ui* call);
void VertexAttribI1uiv(const call::VertexAttribI1uiv* call);
void VertexAttribI2i(const call::VertexAttribI2i* call);
void VertexAttribI2iv(const call::VertexAttribI2iv* call);
void VertexAttribI2ui(const call::VertexAttribI2ui* call);
void VertexAttribI2uiv(const call::VertexAttribI2uiv* call);
void VertexAttribI3i(const call::VertexAttribI3i* call);
void VertexAttribI3iv(const call::VertexAttribI3iv* call);
void VertexAttribI3ui(const call::VertexAttribI3ui* call);
void VertexAttribI3uiv(const call::VertexAttribI3uiv* call);
void VertexAttribI4bv(const call::VertexAttribI4bv* call);
void VertexAttribI4i(const call::VertexAttribI4i* call);
void VertexAttribI4iv(const call::VertexAttribI4iv* call);
void VertexAttribI4sv(const call::VertexAttribI4sv* call);
void VertexAttribI4ubv(const call::VertexAttribI4ubv* call);
void VertexAttribI4ui(const call::VertexAttribI4ui* call);
void VertexAttribI4uiv(const call::VertexAttribI4uiv* call);
void VertexAttribI4usv(const call::VertexAttribI4usv* call);
void VertexAttribIPointer(const call::VertexAttribIPointer* call);
void VertexAttribP1ui(const call::VertexAttribP1ui* call);
void VertexAttribP1uiv(const call::VertexAttribP1uiv* call);
void VertexAttribP2ui(const call::VertexAttribP2ui* call);
void VertexAttribP2uiv(const call::VertexAttribP2uiv* call);
void VertexAttribP3ui(const call::VertexAttribP3ui* call);
void VertexAttribP3uiv(const call::VertexAttribP3uiv* call);
void VertexAttribP4ui(const call::VertexAttribP4ui* call);
void VertexAttribP4uiv(const call::VertexAttribP4uiv* call);
void VertexAttribPointer(const call::VertexAttribPointer* call);
void Viewport(const call::Viewport* call);